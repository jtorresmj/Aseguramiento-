pipeline {
    agent any

    environment {
        // Variables de entorno para las pruebas de API
        BAGISTO_BASE_URL = "${env.BAGISTO_BASE_URL ?: 'http://localhost:8000'}"
        BAGISTO_CUSTOMER_EMAIL = credentials('bagisto-test-email')
        BAGISTO_CUSTOMER_PASSWORD = credentials('bagisto-test-password')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Obteniendo código del repositorio...'
                checkout scm
            }
        }
        
        stage('Verificar Archivos') {
            steps {
                echo 'Verificando que todos los archivos necesarios estén presentes...'
                script {
                    if (isUnix()) {
                        sh '''
                            chmod +x jenkins/verify-files.sh
                            ./jenkins/verify-files.sh
                        '''
                    } else {
                        bat '''
                            jenkins\\verify-files.bat
                        '''
                    }
                }
            }
        }

        stage('Preparar Entorno') {
            steps {
                echo 'Instalando Newman (Postman CLI) y preparando directorios...'
                script {
                    if (isUnix()) {
                        sh '''
                            echo "=== Verificando directorio de trabajo ==="
                            pwd
                            ls -la
                            
                            echo "=== Instalando Newman ==="
                            npm install -g newman newman-reporter-htmlextra
                            newman --version
                            
                            echo "=== Creando directorios ==="
                            mkdir -p test-results
                            
                            echo "=== Verificando archivos de Postman ==="
                            ls -la postman/ || echo "Directorio postman no encontrado"
                            ls -la postman/*.json || echo "Archivos JSON no encontrados"
                        '''
                    } else {
                        bat '''
                            echo === Verificando directorio de trabajo ===
                            cd
                            dir
                            
                            echo === Instalando Newman ===
                            npm install -g newman newman-reporter-htmlextra
                            newman --version
                            
                            echo === Creando directorios ===
                            if not exist test-results mkdir test-results
                            
                            echo === Verificando archivos de Postman ===
                            dir postman\\ || echo Directorio postman no encontrado
                            dir postman\\*.json || echo Archivos JSON no encontrados
                        '''
                    }
                }
            }
        }

        stage('Run API Tests') {
            steps {
                echo 'Ejecutando pruebas funcionales de API con Newman...'
                script {
                    if (isUnix()) {
                        sh '''
                            echo "=== Verificando archivos antes de ejecutar ==="
                            if [ -f "jenkins/run-postman-tests.sh" ]; then
                                echo "Script encontrado, ejecutando..."
                                chmod +x jenkins/run-postman-tests.sh
                                ./jenkins/run-postman-tests.sh
                            else
                                echo "Script no encontrado, ejecutando Newman directamente..."
                                newman run postman/Bagisto_API_Collection.postman_collection.json \
                                -e postman/Bagisto_Environment.postman_environment.json \
                                --env-var "base_url=${BAGISTO_BASE_URL}" \
                                --env-var "customer_email=${BAGISTO_CUSTOMER_EMAIL}" \
                                --env-var "customer_password=${BAGISTO_CUSTOMER_PASSWORD}" \
                                -r cli,htmlextra,junit \
                                --reporter-htmlextra-export test-results/api-test-report.html \
                                --reporter-junit-export test-results/api-test-results.xml \
                                --color on \
                                --bail \
                                --timeout-request 10000
                            fi
                        '''
                    } else {
                        bat '''
                            echo === Verificando archivos antes de ejecutar ===
                            if exist "postman\\Bagisto_API_Collection.postman_collection.json" (
                                echo Archivos encontrados, ejecutando Newman...
                                newman run postman\\Bagisto_API_Collection.postman_collection.json ^
                                -e postman\\Bagisto_Environment.postman_environment.json ^
                                --env-var "base_url=%BAGISTO_BASE_URL%" ^
                                --env-var "customer_email=%BAGISTO_CUSTOMER_EMAIL%" ^
                                --env-var "customer_password=%BAGISTO_CUSTOMER_PASSWORD%" ^
                                -r cli,htmlextra,junit ^
                                --reporter-htmlextra-export test-results\\api-test-report.html ^
                                --reporter-junit-export test-results\\api-test-results.xml ^
                                --color on ^
                                --bail ^
                                --timeout-request 10000
                            ) else (
                                echo ERROR: Archivos de Postman no encontrados
                                echo Contenido del directorio:
                                dir postman\\
                                exit 1
                            )
                        '''
                    }
                }
            }
        }

        stage('Prueba de Estrés') {
            steps {
                echo 'Ejecutando prueba de estrés de la API...'
                script {
                    if (isUnix()) {
                        sh '''
                            echo "=== Iniciando prueba de estrés ==="
                            if [ -f "postman/Bagisto_API_Collection.postman_collection.json" ]; then
                                newman run postman/Bagisto_API_Collection.postman_collection.json \
                                -e postman/Bagisto_Environment.postman_environment.json \
                                --env-var "base_url=${BAGISTO_BASE_URL}" \
                                --env-var "customer_email=${BAGISTO_CUSTOMER_EMAIL}" \
                                --env-var "customer_password=${BAGISTO_CUSTOMER_PASSWORD}" \
                                --iteration-count 100 \
                                --delay-request 100 \
                                -r cli,junit,htmlextra \
                                --reporter-junit-export test-results/stress-test-results.xml \
                                --reporter-htmlextra-export test-results/stress-test-report.html \
                                --color on \
                                --timeout-request 10000
                            else
                                echo "ERROR: Archivo de colección no encontrado"
                                exit 1
                            fi
                        '''
                    } else {
                        bat '''
                            echo === Iniciando prueba de estrés ===
                            if exist "postman\\Bagisto_API_Collection.postman_collection.json" (
                                newman run postman\\Bagisto_API_Collection.postman_collection.json ^
                                -e postman\\Bagisto_Environment.postman_environment.json ^
                                --env-var "base_url=%BAGISTO_BASE_URL%" ^
                                --env-var "customer_email=%BAGISTO_CUSTOMER_EMAIL%" ^
                                --env-var "customer_password=%BAGISTO_CUSTOMER_PASSWORD%" ^
                                --iteration-count 100 ^
                                --delay-request 100 ^
                                -r cli,junit,htmlextra ^
                                --reporter-junit-export test-results\\stress-test-results.xml ^
                                --reporter-htmlextra-export test-results\\stress-test-report.html ^
                                --color on ^
                                --timeout-request 10000
                            ) else (
                                echo ERROR: Archivo de colección no encontrado
                                exit 1
                            )
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Publicando resultados de pruebas...'

            // Publicar resultados JUnit (pruebas funcionales y de estrés)
            junit(allowEmptyResults: true, testResults: 'test-results/*.xml')

            // Publicar reporte HTML de pruebas funcionales
            publishHTML([
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'test-results',
                reportFiles: 'api-test-report.html',
                reportName: 'API Functional Tests',
                reportTitles: 'Bagisto API Functional Tests'
            ])

            // Publicar reporte HTML de pruebas de estrés
            publishHTML([
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'test-results',
                reportFiles: 'stress-test-report.html',
                reportName: 'API Stress Tests',
                reportTitles: 'Bagisto API Stress Tests'
            ])
        }

        success {
            echo '========================================='
            echo '✓ Pipeline completado exitosamente'
            echo '========================================='
            echo '  ✓ Pruebas funcionales: PASADAS'
            echo '  ✓ Pruebas de estrés (100 iteraciones): COMPLETADAS'
            echo ''
            echo 'Ver reportes en Jenkins:'
            echo '  - API Functional Tests'
            echo '  - API Stress Tests'
            // Aquí puedes agregar notificaciones (Slack, email, etc.)
        }

        failure {
            echo '========================================='
            echo '✗ Pipeline falló'
            echo '========================================='
            echo 'Revisa los reportes HTML para más detalles:'
            echo '  - Console Output en Jenkins'
            echo '  - API Test Reports'
            // Aquí puedes agregar notificaciones de fallo
        }
    }
}

